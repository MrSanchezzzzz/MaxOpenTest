import 'package:http/http.dart';
import 'package:maxopentest/utils/double.dart';

import '../utils/requests.dart';

class Movie {
  bool adult;
  String backdropPath;
  List<String> genres;
  int id;
  String originalLanguage;
  String originalTitle;
  String overview;
  double popularity;
  String posterPath;
  String? posterUrl;
  String releaseDate;
  String title;
  bool video;
  double? rating;
  double voteAverage;
  int voteCount;

  Movie({
    required this.adult,
    required this.backdropPath,
    required this.genres,
    required this.id,
    required this.originalLanguage,
    required this.originalTitle,
    required this.overview,
    required this.popularity,
    required this.posterPath,
    required this.releaseDate,
    required this.title,
    required this.video,
    this.rating,
    required this.voteAverage,
    required this.voteCount,
  }){
    posterUrl=Requests.baseUrl+'original'+posterPath;
    rating=((voteAverage??0)/2).toPrecision(1);
  }

  factory Movie.fromJson(Map<String, dynamic> json) {
    return Movie(
      adult: json['adult'],
      backdropPath: json['backdrop_path']??'',
      genres: [],
      id: json['id']??'',
      originalLanguage: json['original_language']??'',
      originalTitle: json['original_title']??'',
      overview: json['overview']??'',
      popularity: json['popularity'].toDouble(),
      posterPath: json['poster_path']??'',
      releaseDate: json['release_date']??'',
      title: json['title']??'',
      video: json['video']??'',
      voteAverage: json['vote_average'].toDouble(),
      voteCount: json['vote_count']??'',
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'adult': adult,
      'backdrop_path': backdropPath,
      'genres':genres,
      'id': id,
      'original_language': originalLanguage,
      'original_title': originalTitle,
      'overview': overview,
      'popularity': popularity,
      'poster_path': posterPath,
      'release_date': releaseDate,
      'title': title,
      'video': video,
      'vote_average': voteAverage,
      'vote_count': voteCount,
    };
  }
}
