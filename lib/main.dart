import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:maxopentest/blocs/movies_bloc.dart';
import 'package:maxopentest/screens/bookmarks_screen.dart';
import 'package:maxopentest/screens/home_screen.dart';
import 'package:maxopentest/screens/search_screen.dart';
import 'package:maxopentest/utils/requests.dart';
import 'package:maxopentest/utils/themes.dart';
import 'package:maxopentest/widgets/bottom_nav_bar.dart';

void main() async{
  WidgetsFlutterBinding.ensureInitialized();
  await Requests.configure();
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider<SearchMoviesBloc>(create: (context)=> SearchMoviesBloc()),
        BlocProvider<LatestMoviesBloc>(create: (context)=> LatestMoviesBloc()..add(GetLatestMovies())),
        BlocProvider<TopFiveMoviesBloc>(create: (context)=> TopFiveMoviesBloc()..add(GetTopFiveMovies())),
        BlocProvider<FavoriteMoviesBloc>(create: (context)=> FavoriteMoviesBloc()..add(GetFavoriteMovies())),
      ],
      child: MaterialApp(
        title: 'Flutter Demo',
        theme: Themes.defaultTheme,
        home: const MyHomePage(),
      ),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _selectedIndex = 0;

  static final List<Widget> _widgetOptions = [
    const HomeScreen(),
    const SearchScreen(),
    const BookmarksScreen(),
  ];

  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    // Preferences.clearAll();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      body: IndexedStack(
        index: _selectedIndex,
        children: _widgetOptions,
      ),
      bottomNavigationBar: BottomNavBar(
        onItemTapped: _onItemTapped,
        selectedIndex: _selectedIndex,
      ),
    );
  }
}
