import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:maxopentest/blocs/movies_bloc.dart';
import 'package:maxopentest/widgets/rating_indicator.dart';
import 'package:maxopentest/widgets/text_overview_container.dart';

import '../blocs/getmovies_states.dart';
import '../entities/movie.dart';
import '../utils/shared_preferences.dart';

class DetailScreen extends StatefulWidget {
  const DetailScreen({super.key,required this.movie});
  final Movie movie;

  @override
  State<DetailScreen> createState() => _DetailScreenState();
}

class _DetailScreenState extends State<DetailScreen> {
  Future<void> toggleFavorite(GetMoviesState state) async {
    if(await Preferences.isFavorite(movie: widget.movie)){
      Preferences.removeFromFavorites(movie: widget.movie);
    }
    else{
      Preferences.addToFavorites(movie: widget.movie);
    }
    if(state is GetMoviesLoaded){
      context.read<FavoriteMoviesBloc>().add(GetFavoriteMovies());
    }
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<FavoriteMoviesBloc, GetMoviesState>(
      builder: (context,state){
        bool isFavorite=context.watch<FavoriteMoviesBloc>().movies.where((m)=>m.id==widget.movie.id).isNotEmpty;
        return Scaffold(
          body: Container(
            decoration: BoxDecoration(
              image: DecorationImage(
                image: CachedNetworkImageProvider(widget.movie.posterUrl!), // Change this to your image path
                fit: BoxFit.cover,
                colorFilter: ColorFilter.mode(Colors.black.withOpacity(0.3), BlendMode.darken),
              ),
            ),
            child: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [
                      Colors.transparent,
                      Colors.black,
                      Colors.black,
                    ],
                    stops: [0,0.5, 1.0], // Change the first value to make black start earlier
                    begin: Alignment.center,
                    end: Alignment.bottomCenter,
                  ),
                ),
                child: SafeArea(
                  child: Align(
                    alignment: Alignment.bottomLeft,
                    child: Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
                        children: [
                          Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              IconButton(
                                icon: Image.asset(
                                  'assets/icons/back.png',
                                  height: 24,
                                  width: 15,
                                ),
                                onPressed: () {Navigator.of(context).pop();},
                              ),
                              IconButton(
                                icon: Icon(isFavorite?Icons.bookmark:Icons.bookmark_border,size: 24,),
                                color: Colors.white,
                                onPressed: (){toggleFavorite(state);},
                              )
                            ],
                          ),
                          ConstrainedBox(
                            constraints: BoxConstraints(
                              maxHeight: MediaQuery.of(context).size.height*0.6,
                              minHeight: MediaQuery.of(context).size.height*0.4,

                            ),
                            child: Column(
                              mainAxisAlignment: MainAxisAlignment.start,
                              crossAxisAlignment: CrossAxisAlignment.start,
                              mainAxisSize: MainAxisSize.min,
                              children: [
                                Text(widget.movie.title,style: TextStyle(fontFamily: 'Poppins',fontSize: 30,fontWeight: FontWeight.w700),),
                                SizedBox(height: 10,),
                                RatingIndicator(rating: widget.movie.rating,),
                                SizedBox(height: 10,),
                                Text(widget.movie.genres.join(','),style: TextStyle(fontSize: 14,fontFamily: 'Poppins'),),
                                TextOverviewContainer(overview: widget.movie.overview)
                              ],
                            ),
                          ),
                        ],
                      ),
                    ),
                  ),
                )
            ),
          ),
        );

      },
    );
  }
}
