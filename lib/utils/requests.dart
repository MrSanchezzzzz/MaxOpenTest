import 'dart:async';
import 'dart:convert';
import 'package:http/http.dart' as http;

import '../entities/movie.dart';

class Requests {
  static const _auth =
      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiOTMyODdlZDY1ODUwYzQ2YWFiNjg2Y2VmNzEzNzZlMyIsIm5iZiI6MTcxOTIzMzU4NS4zNDE1Mywic3ViIjoiNjY3OTZiMTY1NWE5ODIzZDdmMjM2MTkwIiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.m-LzlHBG8sYE2PyEOalhdFHQfv1USMcUYiXajtGSEo4';
  static const Map<String, String> _header = {
    'accept': 'application/json',
    'Authorization': _auth
  };
  static String baseUrl = '';
  static String language = 'en-US';

  static Future<void> configure() async {
    const String url = 'https://api.themoviedb.org/3/configuration';
    try {
      final response = await _getRequest(url).timeout(Duration(seconds: 15));
      if (response != null) {
        baseUrl = response['images']['base_url'];
      }
    } on TimeoutException{
      baseUrl='';
    }
  }

  static Future<List<Movie>> searchMovies(
      {required String title, bool includeAdult = true, int count = 12}) async {
    String url =
        'https://api.themoviedb.org/3/search/movie?query=$title&include_adult=$includeAdult&language=$language&page=1';
    return _fetchMovies(url, count);
  }

  static Future<List<Movie>> getPopularMovies({int count = 5}) async {
    String url =
        'https://api.themoviedb.org/3/movie/popular?language=$language&page=1';
    return _fetchMovies(url, count);
  }

  static Future<List<Movie>> getLastMovies({int count = 12}) async {
    String url =
        'https://api.themoviedb.org/3/movie/now_playing?language=$language&page=1';
    return _fetchMovies(url, count);
  }

  static Future<Map<String, dynamic>?> _getRequest(String url) async {
    final response = await http.get(Uri.parse(url), headers: _header);
    if (response.statusCode == 200) {
      return jsonDecode(response.body);
    } else {
      print('Request failed with status: ${response.statusCode}.');
      return null;
    }
  }

  static Future<List<Movie>> _fetchMovies(String url, int count) async {
    final response = await _getRequest(url);
    if (response != null) {
      List<dynamic> results = response['results'];
      List<Movie> movies = [];
      for (int i = 0; i < results.length && movies.length < count; i++) {
        var result = results[i];
        if (result['poster_path'] == null) {
          continue;
        }
        Movie movie = Movie.fromJson(result);
        movie.genres = await getMovieGenres(movie.id);
        movies.add(movie);
      }
      return movies;
    }
    return [];
  }

  static Future<List<String>> getMovieGenres(int id) async {
    String url = 'https://api.themoviedb.org/3/movie/$id?language=$language';
    final response = await _getRequest(url);
    List<String> genreStrings = [];
    if (response != null) {
      List<dynamic> genres = response['genres'];
      for (var genre in genres) {
        genreStrings.add(genre['name']);
      }
    }
    return genreStrings;
  }
}
