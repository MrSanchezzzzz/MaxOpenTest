import 'dart:convert';

import 'package:maxopentest/entities/movie.dart';
import 'package:shared_preferences/shared_preferences.dart';

class Preferences {
  static const String favoritesKey = 'favorites';

  static Future<void> addToFavorites({required Movie movie}) async {
    final prefs = await SharedPreferences.getInstance();
    List<String> favorites = prefs.getStringList(favoritesKey) ?? [];
    favorites.add(jsonEncode(movie.toJson()));
    await prefs.setStringList(favoritesKey, favorites);
  }

  static Future<void> clearAll() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.remove(favoritesKey);
  }

  static Future<void> removeFromFavorites({required Movie movie}) async {
    final prefs = await SharedPreferences.getInstance();
    List<Movie> movies = await getFavorites();
    movies.removeWhere((m) => m.id == movie.id);
    List<String> updatedFavorites = movies.map((m) => jsonEncode(m.toJson())).toList();
    await prefs.setStringList(favoritesKey, updatedFavorites);
  }

  static Future<List<Movie>> getFavorites() async {
    final prefs = await SharedPreferences.getInstance();
    List<String> favorites = prefs.getStringList(favoritesKey) ?? [];
    return favorites.map((str) => Movie.fromJson(jsonDecode(str))).toList();
  }

  static Future<bool> isFavorite({required Movie movie}) async {
    List<Movie> movies = await getFavorites();
    return movies.any((m) => m.id == movie.id);
  }
}