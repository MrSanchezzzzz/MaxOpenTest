import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:maxopentest/screens/detail_screen.dart';
import 'package:maxopentest/utils/colors.dart';
import 'package:maxopentest/widgets/movie_poster.dart';
import 'package:maxopentest/widgets/rating_indicator.dart';

import '../blocs/getmovies_states.dart';
import '../blocs/movies_bloc.dart';
import '../entities/movie.dart';
import '../utils/mixins.dart';

class MovieCard<T extends FetchMoviesBloc> extends StatefulWidget {
  const MovieCard({super.key, required this.index});

  final int index;
  @override
  State<MovieCard> createState() => _MovieCardState<T>();
}

class _MovieCardState<T extends FetchMoviesBloc> extends State<MovieCard> with FavoriteToggleMixin {

  @override
  Widget build(BuildContext context) {
    const double scale = 1;
    final width = (MediaQuery.of(context).size.width / 2.75) * scale;
    final height = (MediaQuery.of(context).size.width / 2) * scale;
    return BlocBuilder<T, GetMoviesState>(
      builder: (context, state) {
        Movie movie = Movie.empty();
        if(state is GetMoviesLoaded){
          movie=state.movies[widget.index];
        }
        bool isEmpty=movie.id==0;
        return Container(
          margin: const EdgeInsets.symmetric(vertical: 8),
          height: height,
          child: InkWell(
            onTap:isEmpty?null: () {
              Navigator.of(context).push(
                MaterialPageRoute(builder: (context) => DetailScreen(movie: movie)),
              );
            },
            child: Row(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                MoviePoster(
                  width: width,
                  height: height,
                  movie: movie,
                  onTap: () => toggleFavorite(context, state, movie),
                  loading: isEmpty,
                ),
                isEmpty? Container():
                Expanded(
                  child: Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 16),
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.start,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          movie.title,
                          style: Theme.of(context).textTheme.titleLarge,
                          overflow: TextOverflow.ellipsis,
                          softWrap: true,
                          maxLines: 2,
                        ),
                        const SizedBox(height: 10),
                        RatingIndicator(rating: movie.rating ?? 0,iconSize: 16,),
                        const SizedBox(height: 10),
                        Text(
                          movie.genres.join(','),
                          style: Theme.of(context).textTheme.bodyMedium,
                        ),
                        const SizedBox(height: 10),
                        Text(
                          movie.overview,
                          style: Theme.of(context).textTheme.bodyMedium!.copyWith(
                            color: Color(0xFF888888)
                          ),
                          overflow: TextOverflow.ellipsis,
                          maxLines: 3,
                          softWrap: true,
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
        );
      },
    );
  }
}
