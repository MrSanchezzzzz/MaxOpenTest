import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:maxopentest/screens/detail_screen.dart';
import 'package:maxopentest/utils/shared_preferences.dart';
import 'package:maxopentest/widgets/movie_poster.dart';
import 'package:maxopentest/widgets/rating_indicator.dart';
import '../blocs/getmovies_states.dart';
import '../blocs/movies_bloc.dart';
import '../entities/movie.dart';

class MovieCardTopFive extends StatefulWidget {
  final Movie? movie;

  const MovieCardTopFive({Key? key, this.movie}) : super(key: key);

  @override
  State<MovieCardTopFive> createState() => _MovieCardTopFiveState();
}

class _MovieCardTopFiveState extends State<MovieCardTopFive> {
  Future<void> toggleFavorite(BuildContext context,GetMoviesState state) async {
    if(widget.movie==null){
      return;
    }
    if(await Preferences.isFavorite(movie: widget.movie!)){
      Preferences.removeFromFavorites(movie: widget.movie!);
    }
    else{
      Preferences.addToFavorites(movie: widget.movie!);
    }
    if(state is GetMoviesLoaded){
      context.read<FavoriteMoviesBloc>().add(GetFavoriteMovies());
    }
  }
  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    const double scale=1.75;
    final width=(MediaQuery.of(context).size.width/2)*scale;
    final height=(MediaQuery.of(context).size.width/3)*scale;
    return BlocBuilder<FavoriteMoviesBloc, GetMoviesState>(
      builder: (context,state) {
        bool isFavorite=false;
        if(state is GetMoviesLoaded){
          isFavorite=context.watch<FavoriteMoviesBloc>().movies.where((m)=>m.id==widget.movie?.id).isNotEmpty;
        }
        return Padding(
          padding: const EdgeInsets.only(right: 16, top: 20),
          child: InkWell(
            onTap: () {
              Navigator.of(context).push(MaterialPageRoute(builder: (context) => DetailScreen(movie: widget.movie!)));
            },
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    MoviePoster(width: width,
                      height: height,
                      showBookmark: widget.movie != null,
                      url: widget.movie?.posterUrl,
                      onTap: (){toggleFavorite(context, state);},
                      isFavorite:isFavorite,),
                    SizedBox(height: 12,),
                    Text(widget.movie?.title ?? '',
                      style: TextStyle(
                          fontFamily: 'Poppins',
                          fontWeight: FontWeight.w700,
                          fontSize: 20
                      ),
                    ),
                    SizedBox(height: 8,),
                    RatingIndicator(rating: widget.movie?.rating ?? 0,)
                  ],
                ),
              ],
            ),
          ),
        );
      }
    );
  }
}
